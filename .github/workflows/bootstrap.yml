name: Bootstrap homelab

on:
  workflow_dispatch:
    # inputs:
    # skip_deploy:
    #   type: boolean
    #   description: "Whether to only bootstrap the config but not deploy the cluster"
    #   default: false
    # name:
    #   type: string
    #   default: ""
    #   description: Name of the cluster
    #   required: true
    # region:
    #   type: choice
    #   description: AWS Region to deploy
    #   default: "eu-central-2"
    #   options:
    #     - "eu-central-1"
    #     - "eu-west-1"
    #     - "eu-west-2"
    #     - "eu-west-3"
    #     - "eu-north-1"
    #     - "sa-east-1"

# env:
# STATE_BUCKET: "grapesstate"
# STATE_BUCKET_REGION: "eu-west-1"

jobs:
  deploy:
    runs-on: ubuntu-latest
    # permissions:
    # id-token: write
    # contents: read
    defaults:
      run:
        working-directory: bootstrap
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
      - name: Install helm
        uses: azure/setup-helm@v4
        with:
          version: 3.15.4
      - name: Create kind clustere
        uses: actions/setup-kind@v1
        with:
          version: 1.31.0
          cluster_name: caph-mgmt
      - name: Add helm repositories:
        run: |
          helm repo add jetstack https://charts.jetstack.io --force-update
          helm repo add capi-operator https://kubernetes-sigs.github.io/cluster-api-operator
 .    - name: Install cert-manager on kind
        run: helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set crds.enabled=true
      - name: Install capi-operator on kind
        run: helm install capi-operator capi-operator/cluster-api-operator --create-namespace -n capi-operator-system 
      - name: Install capi & caph
        run: kubectl apply -f capi-components.yaml
      - name: Inject hcloud-token
        run: |
          kubectl create secret generic hetzner -n caph-system --from-literal hcloud=${{ secrets.HCLOUD_TOKEN }}
          kubectl label secret hetzner -n caph-system "clusterctl.cluster.x-k8s.io/move="
 .    - name: Deploy cluster
        run: kubectl apply -f cluster.yaml
 .    - name: Wait for provisioned cluster
        run: kubectl wait --for='jsonpath={.status.conditions[?(@.type=="Ready")].status}=True' --tiumeout=300s cluster/technat.dev